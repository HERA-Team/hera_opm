#! /bin/bash
set -e

# import common functions
src_dir="$(dirname "$0")"
source ${src_dir}/_common.sh

# define polarizations
pol1="xx"
pol2="yy"

# make the file name
bn=$(basename ${1})
# Get pol
pol=$(get_pol ${1})


# We need to run xrfi on the raw visibilities for all polarizations.
# In addition, we want to run on the model visibilities, abscal gain solutions
# (including omnical and firstcal), and omnical chi-squared values. We then
# broadcast all of these together to get a consensus of what should be flagged as RFI.
#
# We therefore pass the *.abs.calfits file into $pol1 and $pol2 defined above
# to flag on the gain solutions and chi-squared values. We also pass the model
# visibilities to these pols. These two threads flag
# these data products in addition to the raw visibitilies. The other two threads only flag
# their respective raw visibilities. The by-product of these steps are *.npz files, which
# contain the flag information produced by each thread.
#
# Once the flagging is done, we need to tie everything together, and broadcast/apply to the
# data files. This is done in the `do_DELAY XRFI_APPLY.sh' script, which will take all of the
# *.npz files as arguments in addition to the flags generated by flagging the raw visibilities.

# Parameters are set in the configuration file, here we define their positions,
# which must be consistent with the config.
# 1 - filename
### Delay filter parameters - see hera_cal.utils for details
# 2 - standoff
# 3 - horizon
# 4 - tol
# 5 - window
# 6 - skip_wgt
# 7 - maxiter
### XRFI parameters - see hera_qm.utils for details
# 8 - kt_size
# 9 - kf_size
# 10 - sig_init
# 11 - sig_adj
# 12 - px_threshold
# 13 - freq_threshold
# 14 - time_threshold

if is_lin_pol ${bn}; then
    # This thread runs on raw visibility + cal + model

    # get the name of the abs.calfits and model vis files
    abs_f=`echo ${bn}.abs.calfits`
    vis_f=`echo ${bn}.vis.uvfits`

    # run the xrfi command
    echo delay_xrfi_run.py --standoff=${2} --horizon=${3} --tol=${4} --window=${5} --skip_wgt=${6} --maxiter=${7} --kt_size=${8} --kf_size=${9} --sig_init=${10} --sig_adj=${11} --px_threshold=${12} --freq_threshold=${13} --time_threshold=${14} --calfits_file=${abs_f} --model_file=${vis_f} --model_file_format=uvfits --infile_format=miriad --algorithm=xrfi --extension=.flags.npz --summary ${bn}OC
    delay_xrfi_run.py --standoff=${2} --horizon=${3} --tol=${4} --window=${5} --skip_wgt=${6} --maxiter=${7} --kt_size=${8} --kf_size=${9} --sig_init=${10} --sig_adj=${11} --px_threshold=${12} --freq_threshold=${13} --time_threshold=${14} --calfits_file=${abs_f} --model_file=${vis_f} --model_file_format=uvfits --infile_format=miriad --algorithm=xrfi --extension=.flags.npz --summary ${bn}OC
else
    # These threads run just on raw visibility
    echo delay_xrfi_run.py --standoff=${2} --horizon=${3} --tol=${4} --window=${5} --skip_wgt=${6} --maxiter=${7} --kt_size=${8} --kf_size=${9} --sig_init=${10} --sig_adj=${11} --px_threshold=${12} --freq_threshold=${13} --time_threshold=${14} --infile_format=miriad --algorithm=xrfi --extension=.flags.npz --summary ${bn}OC
    delay_xrfi_run.py --standoff=${2} --horizon=${3} --tol=${4} --window=${5} --skip_wgt=${6} --maxiter=${7} --kt_size=${8} --kf_size=${9} --sig_init=${10} --sig_adj=${11} --px_threshold=${12} --freq_threshold=${13} --time_threshold=${14} --infile_format=miriad --algorithm=xrfi --extension=.flags.npz --summary ${bn}OC
fi
